version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py makemigrations && 
             python manage.py migrate && 
             python manage.py runserver 0.0.0.0:8000"
    container_name: testflow-app
    volumes:
      - ./src:/code
    restart: unless-stopped
    tty: true
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres

  postgres:
    image: postgres:15.1-alpine3.17
    container_name: testflow-postgres
    restart: unless-stopped
    tty: true
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgres
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}'"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  postgres-data:
